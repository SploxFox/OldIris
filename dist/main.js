!function(e){var t={};function s(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(i,n,function(t){return e[t]}.bind(null,n));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=2)}([function(e,t,s){"use strict";function i(e,t=!0){return"resources/"+(t?window.localizer.language+"/":"default/")+e}Object.defineProperty(t,"__esModule",{value:!0}),t.resolvePath=i,t.loadFile=function e(t,s,n=!0){var a=new XMLHttpRequest;a.open("GET",i(t,n),!0),a.onreadystatechange=(()=>{4===a.readyState&&(200==a.status||n&&e.bind(this)(t,s,!1))}).bind(this),a.onload=function(){200==a.status&&s.bind(this)(a)}.bind(this),a.send(null)}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0);t.TabbedElement=class{constructor(e,t){this.tabName=e,this.labelShown=!1,this.tabElement=document.createElement("div"),this.tabElement.classList.add("tab","pop"),this.tabContentElement=document.createElement("div"),t&&(this.icon=document.createElement("img"),this.icon.src=i.resolvePath(t,!1),this.icon.classList.add("icon"),this.tabContentElement.appendChild(this.icon)),this.tabTextElement=document.createElement("span"),this.tabTextElement.classList.add("tab-label"),this.refreshLabel(),this.tabContentElement.classList.add("tab-content"),this.tabElement.appendChild(this.tabContentElement),this.bodyElement=document.createElement("div"),this.bodyElement.classList.add("tab-body","pop","interactable"),this.tabElement.appendChild(this.bodyElement),this.tabElement.addEventListener("interacted",function(){"opened"==this.state?this.close():this.open()}.bind(this)),this.tabElement.classList.add("interactable"),window.addEventListener("resize",this.refreshLabel.bind(this))}get state(){return this._state}open(){this.tabElement.classList.add("opened"),this._state="opened"}close(){this.tabElement.classList.remove("opened"),this._state="closed"}refreshLabel(){this.icon&&window.innerWidth>500||!this.icon?this.labelShown||this.showLabel():this.labelShown&&this.hideLabel()}showLabel(){this.tabTextElement.textContent=window.localizer.localize(this.tabName),this.tabContentElement.appendChild(this.tabTextElement),console.log("shown"),this.labelShown=!0}hideLabel(){console.log("hidden"),this.tabTextElement.parentNode.removeChild(this.tabTextElement),this.labelShown=!1}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(3),n=s(1),a=s(8),o=s(9);var r=new i.Iris;window.localizer=new a.Localizer("english",function(){r.localizationLoaded.bind(r)(),r.userInterface.textBox.tabs=[new n.TabbedElement("save","icons/save.svg"),new n.TabbedElement("chat-history","icons/chat.svg"),new o.OrganizerTab(r.storyManager)],r.userInterface.textBox.updateTabs()}),r.loadStory("main-story.json"),document.body.appendChild(r.element),(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|(o|a)d)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(navigator.userAgent)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent))&&(document.body.classList.add("mobile"),document.body.parentElement.classList.add("mobile"),r.showScrollNotification())},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(4),n=s(5),a=s(6);t.Iris=class{constructor(){this.touchStarted=!1,this.finishedLoading=!1,this.interfaceHasLoaded=!1,this.storyHasLoaded=!1,this.visuals=new n.Visuals,this.element=document.createElement("div"),this.element.classList.add("game"),this.guiWrapper=document.createElement("div"),this.guiWrapper.classList.add("interface-wrapper"),this.element.appendChild(this.guiWrapper),window.addEventListener("touchstart",function(e){e.touches[0].target.dispatchEvent(new CustomEvent("interacted",{})),e.target.classList.contains("interactable")||this.advance(),this.touchStarted=!0}.bind(this)),window.addEventListener("click",function(e){this.touchStarted?this.touchStarted=!1:(e.target.dispatchEvent(new CustomEvent("interacted",{})),e.target.classList.contains("interactable")||(console.log(this.userInterface.textBox),this.userInterface.textBox.tabsOpen||this.advance()))}.bind(this))}loadStory(e){this.storyManager=new i.StoryManager(e,this.storyLoaded.bind(this))}localizationLoaded(e){console.log(this),this.userInterface=new a.UserInterface,this.interfaceHasLoaded=!0,this.guiWrapper.appendChild(this.userInterface.textBox.element),this.checkLoadStatus()}storyLoaded(){this.storyHasLoaded=!0,this.checkLoadStatus()}checkLoadStatus(){this.interfaceHasLoaded&&this.storyHasLoaded&&(this.finishedLoading=!0,this.start())}start(){this.storyManager.cue.speech||this.storyManager.goToNextSpeech(),this.userInterface.textBox.showText(this.storyManager.cue.character,this.storyManager.speech)}advance(){this.userInterface.textBox.isFinished?(this.storyManager.goToNextSpeech(),this.userInterface.textBox.showText(this.storyManager.cue.character,this.storyManager.speech)):this.userInterface.textBox.finish()}showScrollNotification(){var e=document.createElement("div");this.guiWrapper.appendChild(e),e.textContent="Scroll Down",e.classList.add("scroll-noti","pop","text"),e.style.top="10px",window.setTimeout(function(){e.style.top="-100vh"},5e3)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0);t.StoryManager=class{constructor(e,t){this.episodePosition=0,this.chapterPosition=0,this.cuePosition=0,this.speechPosition=0,this._evidence=[],i.loadFile.bind(this)("story/main-story.json",this.storyFinishedLoading,!0),this.storyLoadedCallback=t}storyFinishedLoading(e){this.story=JSON.parse(e.responseText),this.storyLoadedCallback()}get speech(){return this.story.episodes[this.episodePosition].chapters[this.chapterPosition].content[this.cuePosition].speech[this.speechPosition]}get cue(){var e=this.story.episodes[this.episodePosition].chapters[this.chapterPosition].content[this.cuePosition];if(null==e)throw"Error: Found cue to be undefined!";return e}get chapter(){return this.story.episodes[this.episodePosition].chapters[this.chapterPosition]}get episode(){return this.story.episodes[this.episodePosition]}get evidence(){return this._evidence}register(){this.cue.evidence&&this._evidence.push({name:this.cue.name,id:this.cue.id,description:this.cue.description,image:this.cue.image?this.cue.image:void 0})}advance(){this.cue.speech&&this.cue.speech.length-1>this.speechPosition?(this.speechPosition++,console.log("Advanced to next speech. New position: "+this.speechPosition)):this.chapter.content.length-1>this.cuePosition?(this.cuePosition++,this.speechPosition=0,console.log("Advanced to next cue.")):this.episode.chapters.length>this.chapterPosition&&(this.chapterPosition++,this.speechPosition=0,this.cuePosition=0,console.log("Advanced to next chapter."))}goToNextSpeech(){do{this.register(),this.advance()}while(!this.cue.speech)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Visuals=class{constructor(){this.canvas=document.createElement("canvas"),this.canvas.classList.add("visuals"),this.context=this.canvas.getContext("2d"),this.context.rect(10,10,20,20)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(7);t.UserInterface=class{constructor(){this.textBox=new i.TextBox}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class i{constructor(){this.tabs=[],this.element=document.createElement("div"),this.element.classList.add("text","text-box"),this.speakerElement=document.createElement("span"),this.speakerElement.classList.add("name","pop"),this.textElement=document.createElement("div"),this.textElement.classList.add("text-block"),this.tabsElement=document.createElement("div"),this.tabsElement.classList.add("tabs"),this.updateTabs(),this.element.appendChild(this.speakerElement),this.element.appendChild(this.textElement),this.element.appendChild(this.tabsElement)}updateTabs(){for(;this.tabsElement.firstElementChild;)this.tabsElement.firstElementChild.remove();for(var e=0;e<this.tabs.length;e++)this.tabsElement.appendChild(this.tabs[e].tabElement)}get tabsOpen(){for(var e=0;e<this.tabs.length;e++)if("opened"==this.tabs[e].state)return!0;return!1}clear(){for(;this.textElement.firstElementChild;)this.textElement.firstElementChild.remove();this.speakerElement.textContent="",this.blipNum=0}showText(e,t){this.clear(),this.isFinished=!1,this.speakerElement.textContent=e;var s="fast",n="speech",a=function(e){if("#"!=t[e]||"#"!=t[e+1])return{character:t[e],mode:n,speed:s,index:e,isLastCharacter:e+1>=t.length};try{for(var i="",a=e+2;"("!=t[a]&&t.length>a;a++)i+=t[a];for(var o,r="",c=a+1;")"!=t[c]&&t.length>c;c++)r+=t[c];switch(o=r.split(","),i){case"mode":n=o[0];break;case"speed":s=o[0]}return{index:c}}catch(e){console.log("Unable to parse command!"),console.log(e)}}.bind(this);for(var o=0;o<t.length;o++){var r=a(o);if(i.instanceOfQueuedCharacter(r)){var c=document.createElement("span");c.classList.add("text",n,"hidden"),c.textContent=t[o],c.dataset.index=""+o,this.textElement.appendChild(c)}else o=r.index}(function e(n){var o=function(){if(n<t.length){var s=a(n),o=s.index+1;i.instanceOfQueuedCharacter(s)&&this.addChar(s),e.bind(this)(o)}}.bind(this);this.shouldSpeedUp?o():window.setTimeout(o.bind(this),i.getWaitTime(s))}).bind(this)(0)}static getWaitTime(e){switch(e){case"fast":return 20;case"slow":return 50;case"very-slow":return 200}}static instanceOfQueuedCharacter(e){return void 0!==e.character}addChar(e){document.querySelector("[data-index='"+e.index+"']").classList.remove("hidden");this.blipNum++," "==e.character&&(this.blipNum=0),e.isLastCharacter&&(this.isFinished=!0,this.shouldSpeedUp=!1)}finish(){this.shouldSpeedUp=!0}}t.TextBox=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0);t.Localizer=class{constructor(e,t){this.localizationLoadedCallback=t,this._language=e,window.localizer=this,i.loadFile.bind(this)("interface.json",function(e){this.localized=JSON.parse(e.responseText),this.localizationLoadedCallback()}.bind(this))}localize(e){return this.localized[e]}get language(){return this._language}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),n=s(10),a=s(0);t.OrganizerTab=class extends i.TabbedElement{constructor(e){super("organizer","icons/organizer.svg"),this.story=e,this.bodyElement.classList.add("organizer"),this.evidenceContainerElement=document.createElement("div"),this.evidenceContainerElement.classList.add("evidence-container","pop"),this.bodyElement.appendChild(this.evidenceContainerElement)}open(){n.replaceElementChildren(this.evidenceContainerElement,this.getEvidenceElements()),super.open()}getEvidenceElements(){for(var e=[],t=0;t<this.story.evidence.length;t++){var s=document.createElement("div");s.classList.add("evidence","pop");var i=document.createElement("img");i.src=this.story.evidence[t].image?a.resolvePath(this.story.evidence[t].image):"https://www.staples-3p.com/s7/is/image/Staples/sp36188286_sc7?wid=512&hei=512",s.appendChild(i);var n=document.createElement("div");n.classList.add("evidence-text"),s.appendChild(n);var o=document.createElement("span");o.textContent=this.story.evidence[t].name,o.classList.add("evidence-name"),n.appendChild(o);var r=document.createElement("span");r.textContent=this.story.evidence[t].description,r.classList.add("evidence-description"),n.appendChild(r),s.classList.add("interactable"),s.addEventListener("interacted",function(t,s){for(var i=0;i<e.length;i++)e[i].classList.remove("selected"),s.target.classList.add("selected");this.selectedEvidence=t,console.log(t)}.bind(this,this.story.evidence[t])),e.push(s)}return console.log(e),e}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.replaceElementChildren=function(e,t){for(;e.firstElementChild;)e.firstElementChild.remove();for(var s=0;s<t.length;s++)e.appendChild(t[s]);return e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,