!function(e){var t={};function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(n,s,function(t){return e[t]}.bind(null,s));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=new(r(1).Game)("https://review.st-ignati.us/chemistry/story.json");document.body.appendChild(n.element)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(2),s=r(3),i=r(4);t.Game=class{constructor(e){this.touchStarted=!1,this.userInterface=new i.UserInterface,this.visuals=new s.Visuals,this.storyManager=new n.StoryManager(e),this.storyManager.currentCue.speech||this.storyManager.goToNextSpeech(),this.element=document.createElement("div"),this.element.classList.add("game");var t=document.createElement("div");t.classList.add("interface-wrapper"),t.appendChild(this.userInterface.textBox.element),this.element.appendChild(t),this.userInterface.textBox.showText(this.storyManager.currentCue.character,this.storyManager.currentSpeech),window.addEventListener("touchstart",function(){this.advance(),this.touchStarted=!0}.bind(this)),window.addEventListener("click",function(){this.touchStarted?this.touchStarted=!1:this.advance()}.bind(this))}advance(){this.storyManager.goToNextSpeech(),this.userInterface.textBox.showText(this.storyManager.currentCue.character,this.storyManager.currentSpeech)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.StoryManager=class{constructor(e){this.currentEpisodePosition=0,this.currentChapterPosition=0,this.currentCuePosition=0,this.currentSpeechPosition=0,this._currentEvidence=[];var t=new XMLHttpRequest;t.open("GET",e,!1),t.send(null),console.log(t.responseText),this.story=JSON.parse(t.responseText),console.log(this.story)}get currentSpeech(){var e=this.story.episodes[this.currentEpisodePosition].chapters[this.currentChapterPosition].content[this.currentCuePosition].speech[this.currentSpeechPosition];return console.log(e),e}get currentCue(){var e=this.story.episodes[this.currentEpisodePosition].chapters[this.currentChapterPosition].content[this.currentCuePosition];if(null==e)throw"Error: Found cue to be undefined!";return e}get currentChapter(){return this.story.episodes[this.currentEpisodePosition].chapters[this.currentChapterPosition]}get currentEpisode(){return this.story.episodes[this.currentEpisodePosition]}get currentEvidence(){return this._currentEvidence}register(){this.currentCue.newevidence&&this._currentEvidence.push({name:this.currentCue.name,id:this.currentCue.newevidence,image:this.currentCue.image?this.currentCue.image:"https://previews.123rf.com/images/iqoncept/iqoncept0901/iqoncept090100094/4221417-a-white-wrinkled-piece-of-paper-background-for-slides-brochures-and-presentations-.jpg"})}advance(){this.currentCue.speech&&this.currentCue.speech.length-1>this.currentSpeechPosition?(this.currentSpeechPosition++,console.log("Advanced to next speech. New position: "+this.currentSpeechPosition)):this.currentChapter.content.length>this.currentCuePosition?(this.currentCuePosition++,this.currentSpeechPosition=0,console.log("Advanced to next cue.")):this.currentEpisode.chapters.length>this.currentChapterPosition&&(this.currentChapterPosition++,this.currentSpeechPosition=0,this.currentCuePosition=0,console.log("Advanced to next chapter."))}goToNextSpeech(){do{this.register(),this.advance()}while(!this.currentCue.speech)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Visuals=class{constructor(){this.canvas=document.createElement("canvas"),this.canvas.classList.add("visuals"),this.context=this.canvas.getContext("2d"),this.context.rect(10,10,20,20)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(5),s=r(6);t.UserInterface=class{constructor(){this.textBox=new n.TextBox,this.courtRecord=new s.CourtRecord}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(){this.element=document.createElement("div"),this.element.classList.add("text","text-box"),this.speakerElement=document.createElement("span"),this.speakerElement.classList.add("name"),this.textElement=document.createElement("div"),this.textElement.classList.add("text-block"),this.element.appendChild(this.speakerElement),this.element.appendChild(this.textElement)}clear(){for(;this.textElement.firstElementChild;)this.textElement.firstElementChild.remove();this.speakerElement.textContent="",this.blipNum=0,this.isFinished=!1}showText(e,t){this.clear(),this.speakerElement.textContent=e;var r="fast",s="speech",i=function(e){if("#"!=t[e]||"#"!=t[e+1])return{character:t[e],mode:s,speed:r,index:e};try{for(var n="",i=e+2;"("!=t[i]&&t.length>i;i++)n+=t[i];for(var o,c="",a=i+1;")"!=t[a]&&t.length>a;a++)c+=t[a];switch(o=c.split(","),n){case"mode":s=o[0];break;case"speed":r=o[0]}return{index:a}}catch(e){console.log("Unable to parse command!"),console.log(e)}}.bind(this);for(var o=0;o<t.length;o++){var c=i(o);if(n.instanceOfQueuedCharacter(c)){var a=document.createElement("span");a.classList.add("text",s,"hidden"),a.textContent=t[o],a.dataset.index=""+o,this.textElement.appendChild(a)}else o=c.index}(function e(s){window.setTimeout(function(){if(s<t.length){var r=i(s),o=r.index+1;n.instanceOfQueuedCharacter(r)&&this.addChar(r),e.bind(this)(o)}}.bind(this),n.getWaitTime(r))}).bind(this)(0)}static getWaitTime(e){switch(e){case"fast":return 20;case"slow":return 50;case"very-slow":return 200}}static instanceOfQueuedCharacter(e){return void 0!==e.character}addChar(e){document.querySelector("[data-index='"+e.index+"']").classList.remove("hidden");this.blipNum++," "==e.character&&(this.blipNum=0)}}t.TextBox=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.CourtRecord=class{constructor(){this.element=document.createElement("div"),this.element.classList.add("court-record","text")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,